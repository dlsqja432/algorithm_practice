package bfs;
//백준 4179번 불!

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

class Pair3 {
	int x;
	int y;
	int len;
	char c;
	
	public Pair3(int x, int y, int len, char c) {
		super();
		this.x = x;
		this.y = y;
		this.len = len;
		this.c = c;
	}
}

public class Ex04 {
	
	static char[][] maze = new char[1001][1001];
	static boolean[][] vis = new boolean[1001][1001];
	static int[] dx = {1, 0, -1, 0};
	static int[] dy = {0, 1, 0, -1};
	static Queue<Pair3> queue = new LinkedList<>();
	static ArrayList<Pair3> pArr = new ArrayList<>();
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		int m = Integer.parseInt(br.readLine());
		
		for(int i=0; i<n; i++) {
			String s = br.readLine();
			for(int j=0; j<m; j++) {
				maze[i][j] = s.charAt(j);
				if(s.charAt(j) == 'J') {
					pArr.add(new Pair3(i,j,1,'J'));
					vis[i][j] = true;
				}
				if(s.charAt(j) == 'F') {
					pArr.add(new Pair3(i,j,1,'F'));
					vis[i][j] = true;
				}
			}
		}
		
		for(Pair3 p : pArr) {
			queue.add(p);
		}
		
		while(!queue.isEmpty()) {
			Pair3 cur = queue.peek();
			queue.poll();
			int count = 4;
			for(int i=0; i<4; i++) {
				int nx = cur.x + dx[i];
				int ny = cur.y + dy[i];
				if(cur.c == 'J') {
					if(maze[nx][ny] == '#' || maze[nx][ny] == 'F' || vis[nx][ny]) {
						count--;
						continue;
					}
					if(nx<0 || nx>=n || ny<0 || ny>=m) {
						System.out.println(cur.len + 1);
						return;
					}
					if(maze[nx][ny] == '.') {
						maze[nx][ny] = 'J';
						vis[nx][ny] = true;
						queue.add(new Pair3(nx,ny,cur.len+1,'J'));
					}
				}
				
				if(cur.c == 'F') {
					if(maze[nx][ny] == '#' || vis[nx][ny]) continue;
					if(nx<0 || nx>=n || ny<0 || ny>=m) continue;
					if()
					maze[nx][ny] = 'F';
					vis[nx][ny] = true;
					queue.add(new Pair3(nx,ny,cur.len+1,'J'));
				}
				
				if(count == 0) {
					System.out.println("IMPOSSIBLE");
					return;
				}
			}
		}
	}
}
