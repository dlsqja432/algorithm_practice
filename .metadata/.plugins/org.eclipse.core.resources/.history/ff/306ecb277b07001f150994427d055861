package recursion;
//백준 11729번 : 하노이 탑 이동 순서
//n-1개의 원판을 기둥1에서 기둥2로 옮긴다.
//n번 원판을 기둥1에서 기둥3으로 옮긴다.
//n-1개의 원판을 기둥2에서 기둥3으로 옮긴다
//-> 원판이 n-1개일 때 옮길 수 있으면 원판이 n개일 때에도 옮길 수 있다.

import java.util.Scanner;

//원판이 1개일 때 원판을 내가 원하는 곳으로 옮길 수 있다.
//원판이 k개일 때 옮길 수 있으면 원판이 k+1개일 때에도 옮길 수 있다.
public class Ex02 {

	public static void main(String[] args) {
		//1. 함수의 정의
		//static void func(int a, int b, int n) 
		//원판 n개를 a번 기둥에서 b번 기둥으로 옮기는 방법을 출력하는 함수
		
		//2. base condition
		//if(n==1) System.out.println(a + " " + b);
		
		//3. 재귀 식
		//n-1개의 원판을 기둥 a에서 기둥 6-a-b로 옮긴다. 	func(a, 6-a-b, n-1)
		//n번 원판을 기둥 a에서 기둥 b로 옮긴다.			System.out.println(a + " " + b);
		//n-1개의 원판을 기둥 6-a-b에서 기둥 b로 옮긴다.	func(6-a-b, b, n-1)
		
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();

		System.out.println((int)(Math.pow(2, n)-1));
		func(1, 3, n);
	}
	
	static void func(int a, int b, int n) {
		if(n==1) {
			System.out.println(a + " " + b);
			return;
		}
		func(a, 6-a-b, n-1);
		System.out.println(a + " " + b);
		func(6-a-b, b, n-1);
	}
}
