package bfs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Ex13 {

	static int f, s, g, u, d;
	static int[] board;
	static boolean[] vis;
	static Queue<Integer> q = new LinkedList<>();
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int f = Integer.parseInt(st.nextToken());
		int s = Integer.parseInt(st.nextToken());
		int g = Integer.parseInt(st.nextToken());
		int u = Integer.parseInt(st.nextToken());
		int d = Integer.parseInt(st.nextToken());
		
		int[] dx = {u, d};
		vis = new boolean[f];
		board = new int[f];
		board[s] = 1;
		board[g] = 1;
		vis[s] = true;
		q.add(s);
		
		while(!q.isEmpty()) {
			int cur = q.poll();
			for(int dir=0; dir<2; dir++) {
				int nx = cur + 
			}
		}
	}	
}
