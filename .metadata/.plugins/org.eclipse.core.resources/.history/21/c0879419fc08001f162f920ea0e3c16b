package recursion;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

//백준 1992번: 쿼드트리
public class Ex07 {
	static int n;
	static int[][] board;
	static int[] count = new int[2];
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		board = new int[n][n];
		
		for(int i=0; i<n; i++) {
			String s = br.readLine();
			for(int j=0; j<n; j++) {
				board[i][j] = s.charAt(j)- '0';
			}
		}
		
		divide(0,0,n);
	}
	
	static void divide(int x, int y, int size) {
		if(check(x,y,size)) {
			System.out.print(board[x][y]);
			return;
		}
		
		int curSize = size/2;
		for(int i=0; i<2; i++) {
			for(int j=0; j<2; j++) {
				if(i==0 && j==0) {
					System.out.print("(");
				}
				if(i==1 && j==1) {
					System.out.println(")");
				}
				divide(x + i * curSize, y + j * curSize, curSize);
			}
		}
	}
	
	static boolean check(int x, int y, int size) {
		int curNum = board[x][y];
		for(int i=x; i<x+size; i++) {
			for(int j=y; j<y+size; j++) {
				if(curNum != board[i][j]) {
					return false;
				}
			}
		}
		
		return true;
	}
}
