package bfs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

//백준 2206번 벽 부수고 이동하기
public class Ex16 {
	
	static  int n,m;
	static int[][] board;
	static int[][] dist;
	static int[] dx = {1, 0, -1, 0};
	static int[] dy = {0, 1, 0, -1};
	static Queue<Pair> q = new LinkedList<>();
	static int count = 0;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		board = new int[n][m];
		dist = new int[n][m];
		
		for(int i=0; i<n; i++) {
			String s = br.readLine();
			for(int j=0; j<m; j++) {
				board[i][j] = Integer.parseInt(String.valueOf(s.charAt(j)));
				dist[i][j] = -1;
			}
		}
		
		dist[0][0] = 0;
		q.add(new Pair(0,0));
		while(!q.isEmpty()) {
			Pair cur = q.poll();
			for(int dir=0; dir<4; dir++) {
				int nx = cur.x + dx[dir];
				int ny = cur.y + dy[dir];
				if(nx<0 || nx>=n || ny<0 || ny>=m) continue;
				if(dist[nx][ny]>=0 || )
			}
		}
	}
}
